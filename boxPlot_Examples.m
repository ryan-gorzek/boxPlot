% boxPlot Examples
% Demonstration script showing various capabilities of the boxPlot function
%
% This script generates multiple example plots showcasing different features
% and customization options available in boxPlot.

%% Example 1: Basic Boxplot with Custom Colors
% Simple boxplot with custom colors for each box

figure('Position', [100, 100, 300, 500]);
rng(1); % For reproducibility
data1 = [randn(100, 1) + 2, randn(100, 1) + 3.5, randn(100, 1) + 2.8];

boxPlot(data1, ...
    'boxLabels', {'Group A', 'Group B', 'Group C'}, ...
    'boxColors', {[0.8, 0.3, 0.3], [0.3, 0.6, 0.8], [0.4, 0.8, 0.4]});

title('Basic with Custom Colors', 'FontSize', 18);
ylabel('Values', 'FontSize', 14);

%% Example 2: Boxplot with Individual Data Points
% Display all individual data points overlaid on boxes

figure('Position', [100, 100, 300, 500]);
rng(2);
data2 = [randn(50, 1) * 0.8 + 5, randn(50, 1) * 1.2 + 7, randn(50, 1) * 0.9 + 6];

boxPlot(data2, ...
    'boxLabels', {'Control', 'Treatment 1', 'Treatment 2'}, ...
    'boxColors', {[0.7, 0.7, 0.7], [0.9, 0.6, 0.3], [0.6, 0.4, 0.8]}, ...
    'plotPoints', true, ...
    'pointSize', 50, ...
    'pointAlpha', 0.4, ...
    'pointJitter', 'rand');

title('Individual Data Points', 'FontSize', 18);
ylabel('Measurement', 'FontSize', 14);

%% Example 3: Grouped Boxplots with Legend
% Multiple groups with different conditions, includes legend

figure('Position', [100, 100, 350, 500]);
rng(3);
data3 = [randn(80, 1) * 1.2 + 10, randn(80, 1) * 1.5 + 12, ...
         randn(80, 1) * 1.3 + 11, randn(80, 1) * 1.4 + 13];

boxPlot(data3, ...
    'groupSize', 2, ...
    'labelGroups', true, ...
    'boxLabels', {'Timepoint 1', 'Timepoint 2'}, ...
    'boxColors', {[0.4, 0.6, 0.9], [0.9, 0.5, 0.4], [0.4, 0.6, 0.9], [0.9, 0.5, 0.4]}, ...
    'plotLegend', true, ...
    'lgdLabels', {'Condition A', 'Condition B'}, ...
    'lgdColors', {[0.4, 0.6, 0.9], [0.9, 0.5, 0.4]}, ...
    'lgdLocation', 'northwest');

title('Grouped with Legend', 'FontSize', 18);
ylabel('Response', 'FontSize', 14);

%% Example 4: Paired Data with Connecting Lines
% Shows paired/repeated measures data with lines connecting observations

figure('Position', [100, 100, 300, 500]);
rng(4);
nSubjects = 30;
baseline = randn(nSubjects, 1) * 2 + 20;
followup = baseline + randn(nSubjects, 1) * 1.5 + 3;
data4 = [baseline, followup];

boxPlot(data4, ...
    'boxLabels', {'Baseline', 'Follow-up'}, ...
    'boxColors', {[0.5, 0.7, 0.9], [0.9, 0.6, 0.5]}, ...
    'plotLines', true, ...
    'lineWidth', 1.5, ...
    'lineAlpha', 0.3, ...
    'lineColors', {[0.3, 0.3, 0.3]}, ...
    'plotPoints', true, ...
    'pointSize', 75, ...
    'pointColors', {[0.2, 0.4, 0.7]}, ...
    'pointJitter', 'rand');

title('Paired with Connecting Lines', 'FontSize', 18);
ylabel('Score', 'FontSize', 14);

%% Example 5: Customized Appearance - Notched Style
% Demonstrates extensive customization options for a polished look

figure('Position', [100, 100, 300, 500]);
rng(5);
data5 = [randn(120, 1) * 3 + 15, randn(120, 1) * 2.5 + 18, ...
         randn(120, 1) * 3.2 + 16, randn(120, 1) * 2.8 + 19];

boxPlot(data5, ...
    'boxLabels', {'Q1', 'Q2', 'Q3', 'Q4'}, ...
    'boxColors', {[0.3, 0.5, 0.7], [0.5, 0.7, 0.5], [0.8, 0.6, 0.3], [0.7, 0.4, 0.5]}, ...
    'boxAlpha', 0.7, ...
    'boxEdgeWidth', 2, ...
    'medianWidth', 3, ...
    'medianColors', {[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]}, ...
    'whiskerWidth', 1.5, ...
    'outlierSize', 40, ...
    'outlierAlpha', 0.6);

title('Quarterly Performance Metrics', 'FontSize', 18);
ylabel('Performance Index', 'FontSize', 14);

%% Example 6: Multiple Groups with Color-Coded Points
% Complex grouped data with colored points by subject

figure('Position', [100, 100, 400, 500]);
rng(6);
nSubjects = 25;
data6_mat = randn(nSubjects, 6);
data6_mat = data6_mat + repmat([10, 12, 11, 13, 12, 14], nSubjects, 1);
data6_mat = data6_mat + repmat((1:nSubjects)' * 0.1, 1, 6);

% Generate colors for each subject
subjectColors = cell(nSubjects, 6);
cmap = hsv(nSubjects);
for i = 1:nSubjects
    for j = 1:6
        subjectColors{i, j} = cmap(i, :);
    end
end

boxPlot(data6_mat, ...
    'groupSize', 3, ...
    'labelGroups', true, ...
    'boxLabels', {'Session 1', 'Session 2'}, ...
    'boxColors', {[0.85, 0.85, 0.85], [0.75, 0.75, 0.75], [0.65, 0.65, 0.65], ...
                  [0.85, 0.85, 0.85], [0.75, 0.75, 0.75], [0.65, 0.65, 0.65]}, ...
    'plotPoints', true, ...
    'pointSize', 50, ...
    'pointColors', subjectColors, ...
    'pointJitter', 'none', ...
    'plotLines', true, ...
    'lineWidth', 1, ...
    'lineColors', subjectColors(:, 1:5), ...
    'lineAlpha', 0.4);

title('Longitudinal with Subject Tracking', 'FontSize', 18);
ylabel('Outcome Measure', 'FontSize', 14);

%% Example 7: Minimal Clean Style
% Simple, publication-ready style with minimal visual clutter

figure('Position', [100, 100, 250, 500]);
rng(7);
data7 = [randn(100, 1) * 2 + 25, randn(100, 1) * 2.5 + 30, randn(100, 1) * 2.2 + 28];

boxPlot(data7, ...
    'boxLabels', {'Method 1', 'Method 2', 'Method 3'}, ...
    'boxColors', {[0.95, 0.95, 0.95], [0.95, 0.95, 0.95], [0.95, 0.95, 0.95]}, ...
    'boxEdgeWidth', 1.5, ...
    'medianWidth', 2.5, ...
    'whiskerWidth', 1.5);

title('Comparison of Methods', 'FontSize', 18);
ylabel('Efficiency (%)', 'FontSize', 14);
grid on;
set(gca, 'GridAlpha', 0.15);

%% Example 8: Wide Data with Custom Spacing
% Demonstrates control over box spacing for cleaner visualization

figure('Position', [100, 100, 500, 500]);
rng(8);
data8 = randn(80, 8) .* repmat([1.5, 2, 1.8, 2.2, 1.7, 2.1, 1.9, 2.3], 80, 1) + ...
        repmat([10, 15, 12, 18, 11, 16, 13, 17], 80, 1);

colors8 = {[0.8, 0.4, 0.4], [0.4, 0.8, 0.4], [0.4, 0.4, 0.8], [0.8, 0.8, 0.4], ...
           [0.8, 0.4, 0.8], [0.4, 0.8, 0.8], [0.7, 0.5, 0.4], [0.5, 0.7, 0.6]};

boxPlot(data8, ...
    'boxLabels', {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'}, ...
    'boxColors', colors8, ...
    'boxSpacing', 1.2);

title('Multi-Condition Experiment with Spacing', 'FontSize', 18);
ylabel('Activity Level', 'FontSize', 14);

%% Example 9: Transparent Boxes with Visible Data
% Shows combination of transparent boxes with data points for full data visibility

figure('Position', [100, 100, 300, 500]);
rng(9);
data9 = [gamrnd(2, 2, 60, 1), gamrnd(3, 1.5, 60, 1), gamrnd(2.5, 2, 60, 1)];

boxPlot(data9, ...
    'boxLabels', {'Sample A', 'Sample B', 'Sample C'}, ...
    'boxColors', {[0.9, 0.3, 0.3], [0.3, 0.7, 0.9], [0.5, 0.9, 0.5]}, ...
    'boxAlpha', 0.3, ...
    'boxEdgeWidth', 2, ...
    'plotPoints', true, ...
    'pointSize', 20, ...
    'pointStyle', 'o', ...
    'pointColors', {[0.6, 0.1, 0.1], [0.1, 0.4, 0.6], [0.2, 0.5, 0.2]}, ...
    'pointAlpha', 1, ...
    'pointJitter', 'randn');

title('Transparent with Data Points', 'FontSize', 18);
ylabel('Concentration', 'FontSize', 14);

%% Example 10: Publication-Ready Multi-Panel Comparison
% Professional style suitable for academic publications

figure('Position', [100, 100, 450, 500]);
rng(10);

% Simulate experiment with two factors
factor1 = {'Low', 'High'};
factor2 = {'Control', 'Drug A', 'Drug B'};
nReps = 40;

data10 = [randn(nReps, 1) * 1.5 + 8,  randn(nReps, 1) * 1.8 + 12, randn(nReps, 1) * 1.6 + 15, ...
          randn(nReps, 1) * 1.7 + 10, randn(nReps, 1) * 1.9 + 14, randn(nReps, 1) * 1.8 + 18];

boxPlot(data10, ...
    'groupSize', 3, ...
    'labelGroups', true, ...
    'boxLabels', factor1, ...
    'boxColors', {[0.7, 0.7, 0.7], [0.5, 0.7, 0.9], [0.9, 0.6, 0.5], ...
                  [0.7, 0.7, 0.7], [0.5, 0.7, 0.9], [0.9, 0.6, 0.5]}, ...
    'boxEdgeWidth', 1.5, ...
    'medianWidth', 2, ...
    'plotLegend', true, ...
    'lgdLabels', factor2, ...
    'lgdColors', {[0.7, 0.7, 0.7], [0.5, 0.7, 0.9], [0.9, 0.6, 0.5]}, ...
    'lgdLocation', 'northwest', ...
    'lgdBox', 'on');

title('Treatment Effect by Dosage Level', 'FontSize', 18);
xlabel('Dosage', 'FontSize', 14);
ylabel('Response (units)', 'FontSize', 14);

%% Example 11: Custom Box Coordinates
% Demonstrates using custom x-axis positions for boxes

figure('Position', [100, 100, 450, 500]);
rng(11);

% Create data for different experimental conditions
data11 = [randn(60, 1) * 1.5 + 10, randn(60, 1) * 1.8 + 15, ...
          randn(60, 1) * 1.6 + 20, randn(60, 1) * 2.0 + 30];

% Specify custom coordinates (e.g., non-uniform spacing)
customCoords = [1, 2, 4, 7];  % Increasing gaps between boxes

boxPlot(data11, ...
    'boxCoordinates', customCoords, ...
    'boxLabels', {'0 hrs', '24 hrs', '72 hrs', '168 hrs'}, ...
    'boxColors', {[0.9, 0.7, 0.7], [0.9, 0.5, 0.5], [0.8, 0.3, 0.3], [0.6, 0.1, 0.1]}, ...
    'boxEdgeWidth', 1.5);

title('Time Course with Non-Uniform Spacing', 'FontSize', 18);
xlabel('Time Point', 'FontSize', 14);
ylabel('Concentration (Î¼M)', 'FontSize', 14);

% Add vertical lines to emphasize time gaps
hold on;
yl = ylim;
plot([3, 3], yl, '--', 'Color', [0.7, 0.7, 0.7], 'LineWidth', 1);
plot([5.5, 5.5], yl, '--', 'Color', [0.7, 0.7, 0.7], 'LineWidth', 1);
hold off;
